apiVersion: v1
kind: Service
metadata:
  name: zk-hs
  namespace: common-middleware
  labels:
    app: zk
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zk
---
apiVersion: v1
kind: Service
metadata:
  name: zk-cs
  namespace: common-middleware
  labels:
    app: zk
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: zk
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zk-config
  namespace: common-middleware
data:
  ensemble: "zk-0;zk-1;zk-2"
  jvm.heap: "2G"
  tick: "2000"
  init: "10"
  sync: "5"
  client.cnxns: "60"
  snap.retain: "3"
  purge.interval: "1"
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: zk-pdb
  namespace: common-middleware
spec:
  selector:
    matchLabels:
      app: zk
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
  namespace: common-middleware
spec:
  selector:
    matchLabels:
      app: zk
  serviceName: zk-hs
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: zk
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - zk
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: kubernetes-zookeeper
        imagePullPolicy: Always
        image: "registry.cn-beijing.aliyuncs.com/youpai/middleware/k8szk:3.4.14"
        resources:
          requests:
            memory: "1Gi"
            cpu: "0.5"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name: ZK_ENSEMBLE
          valueFrom:
            configMapKeyRef:
              name: zk-config
              key: ensemble
        - name: ZK_HEAP_SIZE
          valueFrom:
            configMapKeyRef:
              name: zk-config
              key: jvm.heap
        - name: ZK_TICK_TIME
          valueFrom:
            configMapKeyRef:
              name: zk-config
              key: tick
        - name: ZK_INIT_LIMIT
          valueFrom:
            configMapKeyRef:
              name: zk-config
              key: init
        - name: ZK_SYNC_LIMIT
          valueFrom:
            configMapKeyRef:
              name: zk-config
              key: tick
        - name: ZK_SNAP_RETAIN_COUNT
          valueFrom:
            configMapKeyRef:
              name: zk-config
              key: snap.retain
        - name: ZK_MAX_CLIENT_CNXNS
          valueFrom:
            configMapKeyRef:
              name: zk-config
              key: client.cnxns
        - name: ZK_PURGE_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: zk-config
              key: purge.interval
        - name: ZK_CLIENT_PORT
          value: "2181"
        - name: ZK_SERVER_PORT
          value: "2888"
        - name: ZK_ELECTION_PORT
          value: "3888"
        - name: ZK_REPLICAS
          value: "3"
        command:
        - sh
        - -c
        - bash /zkGenConfig.sh && zkServer.sh start-foreground
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "bash /zkOk.sh"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "bash /zkOk.sh"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
