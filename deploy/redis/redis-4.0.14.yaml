---
apiVersion: v1
kind: ConfigMap
metadata:
 name: redis-conf
 namespace: common-middleware
data:
 redis.conf: |
         appendonly yes
         cluster-enabled no
         cluster-config-file /var/lib/redis/nodes.conf
         cluster-node-timeout 5000
         requirepass KBaaS@2019-
         dir /var/lib/redis
         port 6379
---
kind: Service
apiVersion: v1
metadata:
  namespace: common-middleware
  name: redis-cs
spec:
  type: NodePort
  ports:
   - name: redis
     protocol: TCP
     port: 6379
     targetPort: 6379
     nodePort: 30379
  selector:
    app: redis
    appCluster: redis-cluster
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: common-middleware
spec:
  serviceName: redis-cs
  selector:
    matchLabels:
      app: redis
      appCluster: redis-cluster
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        appCluster: redis-cluster
    spec:
      nodeSelector:
        apptype: middleware
      terminationGracePeriodSeconds: 20
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - redis
              topologyKey: kubernetes.io/hostname
      containers:
      - name: redis
        image: "redis:4.0.14"
        imagePullPolicy: IfNotPresent
        command:
          - "redis-server"
        args:
          - "/etc/redis/redis.conf"
          - "--protected-mode"
          - "no"
        resources:
          requests:
            cpu: "100m"
            memory: "30Mi"
        ports:
          - name: redis
            containerPort: 6379
            protocol: "TCP"
          - name: cluster
            containerPort: 16379
            protocol: "TCP"
        volumeMounts:
          - name: redis-conf
            mountPath: /etc/redis
          - name: redis-data
            mountPath: /var/lib/redis
      volumes:
        - name: redis-conf
          configMap:
            name: redis-conf
            items:
            - key: redis.conf
              path: redis.conf
  volumeClaimTemplates:
  - metadata:
      name: redis-data
      annotations:
        volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
    spec:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 5Gi